{"version":3,"sources":["components/box.js","App.js","reportWebVitals.js","index.js"],"names":["rand","Math","round","random","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Box","useState","name","values","setValues","classes","React","modalStyle","open","setOpen","handleOpen","Card","CardContent","Typography","gutterBottom","variant","component","TextField","id","label","onChange","e","target","value","CardActions","Button","onClick","color","Modal","onClose","aria-labelledby","aria-describedby","style","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAYA,SAASA,IACP,OAAOC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GAE1C,SAASC,IACP,IAAMC,EAAM,GAAKL,IACXM,EAAO,GAAKN,IAElB,MAAO,CACLK,IAAI,GAAD,OAAKA,EAAL,KACHC,KAAK,GAAD,OAAKA,EAAL,KACJC,UAAU,cAAD,OAAgBF,EAAhB,eAA0BC,EAA1B,OAGb,IAAME,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,SAAU,WACVC,MAAO,IACPC,gBAAiBJ,EAAMK,QAAQC,WAAWL,MAC1CM,OAAQ,iBACRC,UAAWR,EAAMS,QAAQ,GACzBC,QAASV,EAAMW,QAAQ,EAAG,EAAG,QAoElBC,MAjEf,WACE,IADa,EAIeC,mBAHD,CACzBC,KAAM,KAFK,mBAINC,EAJM,KAIEC,EAJF,KAMPC,EAAUnB,IANH,EAOQoB,IAAML,SAASnB,GAA7ByB,EAPM,sBAQWD,IAAML,UAAS,GAR1B,mBAQNO,EARM,KAQAC,EARA,KAiBPC,EAAa,WACjBD,GAAQ,IAKV,OACE,gCACE,eAACE,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,iCAGA,+BACE,8BACE,cAACC,EAAA,EAAD,CACEC,GAAG,OACHhB,KAAK,OACLiB,MAAM,gBACNC,SA1BY,SAACC,GAAO,IAAD,EACPA,EAAEC,OAAlBpB,EADuB,EACvBA,KAAMqB,EADiB,EACjBA,MACdnB,EAAU,2BAAKD,GAAN,kBAAeD,EAAOqB,eA6B3B,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,QAAS,WA5BjBhB,KA6BQK,QAAQ,YACRY,MAAM,YAHR,4BASJ,cAACC,EAAA,EAAD,CACEpB,KAAMA,EACNqB,QAjCc,WAClBpB,GAAQ,IAiCJqB,kBAAgB,qBAChBC,mBAAiB,2BAJnB,SAME,qBAAKC,MAAOzB,EAAY0B,UAAW5B,EAAQhB,MAA3C,SACE,qBAAI6B,GAAG,qBAAP,gBAAgCf,EAAOD,KAAvC,eClFKgC,MARf,WACE,OACE,qBAAKD,UAAU,SAAf,SACE,cAAC,EAAD,OCMSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.81a3f958.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  makeStyles,\n  Modal,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\nfunction Box() {\n  const initialStateValues = {\n    name: \"\",\n  };\n  const [values, setValues] = useState(initialStateValues);\n\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n  const saludar = () => {\n    handleOpen();\n  };\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n    <div>\n      <Card>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Cajita para saludar\n          </Typography>\n          <form>\n            <div>\n              <TextField\n                id=\"name\"\n                name=\"name\"\n                label=\"Saludar a ...\"\n                onChange={handleInputChange}\n              />\n            </div>\n          </form>\n        </CardContent>\n        <CardActions>\n          <Button\n            onClick={() => saludar()}\n            variant=\"contained\"\n            color=\"secondary\"\n          >\n            Confirmar\n          </Button>\n        </CardActions>\n      </Card>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <h2 id=\"simple-modal-title\">Hi {values.name}!</h2>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Box;\n","import \"./App.css\";\nimport Box from './components/box'\n\nfunction App() {\n  return (\n    <div className=\"center\">\n      <Box/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}